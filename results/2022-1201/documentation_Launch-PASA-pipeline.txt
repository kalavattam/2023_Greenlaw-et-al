############################# Options ###############################
#
# * indicates required
#
# --config | -c *                  <filename>  alignment assembly configuration file
#
# // spliced alignment settings
# --ALIGNERS                       <string>    aligners (available options include: gmap, blat, minimap2...
#                                              can run using several, e.g., 'gmap,blat,minimap2')
#  -N                              <int>       max number of top scoring alignments (default: 1)
# --MAX_INTRON_LENGTH | -I         <int>       (max intron length parameter passed to GMAP or BLAT)
#                                              (default: 100000)
# --IMPORT_CUSTOM_ALIGNMENTS_GFF3  <filename>  only using the alignments supplied in the corresponding GFF3
#                                              file
# --trans_gtf                      <filename>  incorporate cufflinks- or stringtie-generated transcripts
#
#
# // actions
# --create | -C                    <flag>      flag, create database
# --replace | -r                   <flag>      flag, drop database if -C is also given; this will DELETE
#                                              all your data and it is irreversible
# --run | -R                       <flag>      flag, run alignment/assembly pipeline
# --annot_compare | -A                         (see section below; can use with opts -L and --annots) 
#                                              compare to annotated genes
# --ALT_SPLICE                     <flag>      flag, run alternative splicing analysis
#
#
# // input files
# --genome | -g *                  <filename>  genome sequence FASTA file (should contain annot db asmbl_id
#                                              as header accession)
# --transcripts | -t *             <filename>  transcript db
#  -f                              <filename>  file containing a list of fl-cdna accessions
# --TDN                            <filename>  file containing a list of accessions corresponding to
#                                              Trinity (full) de novo assemblies (not genome-guided)
#
#
# // polyAdenylation site identification  ** highly recommended **
#  -T                              <flag>      flag, transcript db were trimmed using the TGI seqclean tool
#  -u                              <filename>  value, transcript db containing untrimmed sequences (input
#                                              to seqclean)
#                                              <a filename with a .cln extension should also exist,
#                                              generated by seqclean>
#
# // Misc
# --TRANSDECODER                   <flag>      flag, run transdecoder to identify candidate full-length
#                                              coding transcripts
# --CPU                            <int>       multithreading (default: 2)
# --PASACONF                       <string>    path to a user-defined pasa.conf file containing mysql
#                                              connection info
#                                              (used in place of the $PASAHOME/pasa_conf/conf.txt file)
#                                              (and allows for users to have their own unique mysql
#                                              connection info)
#                                              (instead of the pasa role account)
#
#  -d                              <flag>      flag, debug
#  -h                              <flag>      flag, print this option menu and quit
#
#####################################################################
#
# // Transcript alignment clustering options (clusters are fed into the PASA assembler):
#
# By default, clusters together transcripts based on any overlap (even 1 base!)
#
# Alternatives:
#
# --stringent_alignment_overlap    <float>     (suggested: 30.0) overlapping transcripts must have this min
#                                              % overlap to be clustered
#
# --gene_overlap                   <float>     (suggested: 50.0) transcripts overlapping existing gene
#                                              annotations are clustered; intergenic alignments are
#                                              clustered by default mechanism
#                                              * if --gene_overlap, must also specify --annots with
#                                                annotations in recognizable format (gtf, gff3, or data
#                                                adapted) (just examines 'gene' rows, though)
#
#
# --INVALIDATE_SINGLE_EXON_ESTS    <flag>      invalidates single exon ests so that none can be built into
#                                              pasa assemblies
#
# --transcribed_is_aligned_orient  <flag>      flag for strand-specific RNA-Seq assemblies, the aligned
#                                              orientation should correspond to the transcribed orientation
#
#####################################################################
#
# // Annotation comparison options (used in conjunction with -A at top).
#
#  -L                              <flag>      load annotations (use in conjunction with --annots)
# --annots                         <filename>  existing gene annotations in recognized format (gtf, gff3,
#                                              or custom adapted)
# --GENETIC_CODE                               (default: universal, options: Euplotes, Tetrahymena,
#                                              Candida, Acetabularia)
#
###################### Process Args and Options #####################